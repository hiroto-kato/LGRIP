(SIG
   (rev List -> List)
   (app List List -> List)
   (cons Nat List -> List)
   (s Nat -> Nat)
   (nil  -> List)
)
(RULES
   app(nil,ys) -> ys
   app(cons(x,xs),ys) -> cons(x,app(xs,ys))
   rev(nil) -> nil
   rev(cons(x,xs)) -> app(rev(xs),cons(x,nil))   
)
(CONJECTURES
   rev(app(rev(xs),cons(y,nil))) = cons(y,xs)
)

