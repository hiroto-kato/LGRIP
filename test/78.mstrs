(SIG
   (* Nat Nat -> Nat)
   (+ Nat Nat -> Nat)
   (s Nat -> Nat)
   (0  -> Nat)
   (@ List List -> List)
   (cons Nat List -> List)
   (nil  -> List)
   (timeslist List -> Nat)
)
(RULES
   +(0,x) -> x
   +(s(x),y) -> s(+(x,y))
   *(0,y) -> 0
   *(s(x),y) -> +(y,*(x,y))
   @(nil,ys) -> ys
   @(cons(x,xs),ys) -> cons(x,@(xs,ys))
   timeslist(nil) -> s(0)
   timeslist(cons(x,xs)) -> *(x,timeslist(xs))
)
(CONJECTURES
   timeslist(@(xs,ys)) = *(timeslist(xs),timeslist(ys))
)

